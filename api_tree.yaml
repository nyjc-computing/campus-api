servers:
  - url: https://api.campus.nyjc.dev/v1
    description: Campus API (development, staging)
  - url: https://api.campus.nyjc.app/v1
    description: Campus API (production)

paths:
  /clients:
    summary: Represents all clients in the system.
    get:
    post:
  /clients/{client_id}:
    summary: Represents a single client.
    get:
      parameters:
        - in: path
          name: client_id
          required: true
          description: The ID of the client to retrieve.
          schema:
            type: string
    patch:
      parameters:
        - in: path
          name: client_id
          required: true
          description: The ID of the client to retrieve.
          schema:
            type: string
      requestBody:
        description: Key-value pairs of client properties to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
    delete:
      parameters:
        - in: path
          name: client_id
          required: true
          description: The ID of the client to retrieve.
          schema:
            type: string
  /clients/{client_id}/replace:
    summary: Revoke and reissue a client secret.
    put:
      parameters:
        - in: path
          name: client_id
          required: true
          description: The ID of the client to retrieve.
          schema:
            type: string
  /emailotp/request:
    summary: Request an email OTP.
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
  /emailotp/verify:
    summary: Verify an email OTP.
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  pattern: otp
  /users:
    summary: Represents all users in the system.
    post:
  /users/{user_id}:
    summary: Represents a single user.
    get:
      parameters:
        - in: path
          name: user_id
          required: true
          description: The User ID
          schema:
            type: string
    patch:
      parameters:
        - in: path
          name: user_id
          required: true
          description: The User ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
    delete:
      parameters:
        - in: path
          name: user_id
          required: true
          description: The User ID
          schema:
            type: string

components:
  schemas:
    Client:
      type: object
      properties:
        id:
          type: string
          description: The ID of the client.
        name:
          type: string
          description: The name of the client.
        description:
          type: string
          description: The description of the client.
        created_at:
          type: string
          format: date-time
          description: The creation date of the client.
    User:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user.
        name:
          type: string
          description: The name of the user.
        email:
          type: string
          format: email
          description: The email of the user.
        activated_at:
          type: string
          format: date-time
          description: The activation date of the user.

  parameters:
